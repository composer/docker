name: Docker - v2

on:
  push:
    paths:
    - .github/workflows/v2.yaml
    - '2.1/**'
    - '2.2/**'

env:
  AWS_REGION: us-east-1
  ECR_REPO: public.ecr.aws/u0u1j5s3/composer

jobs:
  build21:
    name: Build 2.1
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: '2.1'
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        docker build \
        --pull \
        --no-cache \
        --tag composer/composer:latest \
        --tag composer/composer:2 \
        --tag composer/composer:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+') \
        .
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Push tag(s) to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker push composer/composer:latest
        docker push composer/composer:2
        docker push composer/composer:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+')
    - name: Login to Amazon Public ECR
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v1
      with:
        registry: public.ecr.aws
        username: ${{ secrets.AWS_ECR_ACCESS_KEY }}
        password: ${{ secrets.AWS_ECR_SECRET_KEY }}
    - name: Push tag(s) to Amazon Public ECR
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag composer/composer:latest $ECR_REPO:latest
        docker tag composer/composer:2 $ECR_REPO:2
        docker tag composer/composer:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+') $ECR_REPO:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+')
        docker push $ECR_REPO:latest
        docker push $ECR_REPO:2
        docker push $ECR_REPO:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+')
  build22:
    name: Build 2.2
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: '2.2'
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        docker build \
        --pull \
        --no-cache \
        --tag composer/composer:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+-RC[1-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+-RC[1-9]+') \
        .
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Push tag(s) to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker push composer/composer:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+')
    - name: Login to Amazon Public ECR
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v1
      with:
        registry: public.ecr.aws
        username: ${{ secrets.AWS_ECR_ACCESS_KEY }}
        password: ${{ secrets.AWS_ECR_SECRET_KEY }}
    - name: Push tag(s) to Amazon Public ECR
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag composer/composer:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+-RC[1-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+-RC[1-9]+') $ECR_REPO:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+-RC[1-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+-RC[1-9]+')
        docker push $ECR_REPO:$(grep -oE 'COMPOSER_VERSION 2.[0-9]+.[0-9]+-RC[1-9]+' Dockerfile | grep -oE '2.[0-9]+.[0-9]+-RC[1-9]+')
